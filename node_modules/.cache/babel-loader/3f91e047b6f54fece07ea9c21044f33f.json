{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/Web Dev/collab/client/src/Components/register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterForm(props) {\n  _s();\n\n  function submission(e) {\n    if (fullname.pass1 !== fullname.pass2) {\n      e.preventDefault();\n      alert(\"Passwords do not match\");\n    } else {\n      console.log(fullname);\n      e.preventDefault();\n      fetch(\"http://localhost:3000/register\", {\n        method: \"POST\",\n        withCredentials: true,\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(fullname)\n      }).then(res => res.json()).then(data => console.log(data));\n    }\n\n    changeName({\n      first: \"\",\n      last: \"\",\n      email: \"\",\n      pass1: \"\",\n      pass2: \"\"\n    });\n  }\n\n  function fChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    changeName(prev => {\n      return { ...prev,\n        [name]: value\n      };\n    });\n  }\n\n  const [fullname, changeName] = useState({\n    first: \"\",\n    last: \"\",\n    email: \"\",\n    pass1: \"\",\n    pass2: \"\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"First Name\",\n      name: \"first\",\n      type: \"text\",\n      value: fullname.first,\n      onChange: fChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: fChange,\n      placeholder: \"Last Name\",\n      name: \"last\",\n      type: \"text\",\n      value: fullname.last\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: fChange,\n      value: fullname.email,\n      type: \"email\",\n      placeholder: \"Email\",\n      name: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: fChange,\n      value: fullname.pass1,\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"pass1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: fChange,\n      value: fullname.pass2,\n      type: \"password\",\n      placeholder: \"Reenter Password\",\n      name: \"pass2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submission,\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"5AmbbS6cpq5M3xvBcTC6nRNIvOY=\");\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/apple/Documents/Web Dev/collab/client/src/Components/register.js"],"names":["React","useState","RegisterForm","props","submission","e","fullname","pass1","pass2","preventDefault","alert","console","log","fetch","method","withCredentials","credentials","headers","body","JSON","stringify","then","res","json","data","changeName","first","last","email","fChange","name","value","target","prev"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nfunction RegisterForm(props) {\n  function submission(e) {\n    if (fullname.pass1 !== fullname.pass2) {\n      e.preventDefault();\n      alert(\"Passwords do not match\");\n    } else {\n      console.log(fullname);\n      e.preventDefault();\n      fetch(\"http://localhost:3000/register\", {\n        method: \"POST\",\n        withCredentials: true,\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(fullname),\n      })\n        .then((res) => res.json())\n        .then((data) => console.log(data));\n    }\n    changeName({ first: \"\", last: \"\", email: \"\", pass1: \"\", pass2: \"\" });\n  }\n\n  function fChange(e) {\n    const { name, value } = e.target;\n    changeName((prev) => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n  }\n  const [fullname, changeName] = useState({\n    first: \"\",\n    last: \"\",\n    email: \"\",\n    pass1: \"\",\n    pass2: \"\",\n  });\n  return (\n    <form>\n      <input\n        placeholder=\"First Name\"\n        name=\"first\"\n        type=\"text\"\n        value={fullname.first}\n        onChange={fChange}\n      />\n      <input\n        onChange={fChange}\n        placeholder=\"Last Name\"\n        name=\"last\"\n        type=\"text\"\n        value={fullname.last}\n      />\n      <input\n        onChange={fChange}\n        value={fullname.email}\n        type=\"email\"\n        placeholder=\"Email\"\n        name=\"email\"\n      />\n      <input\n        onChange={fChange}\n        value={fullname.pass1}\n        type=\"password\"\n        placeholder=\"Password\"\n        name=\"pass1\"\n      />\n      <input\n        onChange={fChange}\n        value={fullname.pass2}\n        type=\"password\"\n        placeholder=\"Reenter Password\"\n        name=\"pass2\"\n      />\n\n      <button onClick={submission} type=\"submit\">\n        Submit\n      </button>\n    </form>\n  );\n}\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}